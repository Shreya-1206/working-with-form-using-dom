{"version":3,"sources":["js/index.js"],"names":["formEl","document","querySelector","emailFld","passwordFld","repasswordFld","fullnameFld","merchantFld","passwordRegEx","canSubmit","submitForm","data","console","log","validationCheck","el","condition","parentElement","classList","remove","add","addEventListener","evt","preventDefault","target","reportValidity","test","value","trimLeft","getFormValues","elements","filter","type","map","name","getAttribute","checked","isFilled","every"],"mappings":"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","file":"js.00a46daa.js","sourceRoot":"..\\src","sourcesContent":["const formEl = document.querySelector('form');\nconst emailFld = document.querySelector(\"input[name='email']\");\nconst passwordFld = document.querySelector(\"input[name='password']\");\nconst repasswordFld = document.querySelector(\"input[name='repassword']\");\nconst fullnameFld = document.querySelector(\"input[name='fullname']\");\nconst merchantFld = document.querySelector(\"input[name='merchant']\");\nconst passwordRegEx = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/gm;\n\nlet canSubmit = true; // lastely changed to true after the form is filled\n\n//step 3:\nconst submitForm = (data) => {\n    console.log(data)\n}\n//function for validation\nconst validationCheck = function(el, condition) {\n  if (condition) {\n    canSubmit= true;\n    el.parentElement.classList.remove('form-field-error');\n  } else {\n    canSubmit = false;\n    el.parentElement.classList.add('form-field-error');\n  }\n}\n\n//Now individual form validators \nemailFld.addEventListener('keyup', function (evt) {\n    evt.preventDefault();\n    /*if (evt.target.reportValidity()) { //this built in method uses the form's fieild type and returns the boolean if it matches or not \n      canSubmit = true;\n      this.parentElement.classList.remove('form-field-error')\n    } else {\n      canSubmit = false;\n      this.parentElement.classList.add('form-field-error')\n      } */     // this.parentElement hepls us to jump one step like level up to form field , as we have added the event listener to the input field..\n    validationCheck(this,evt.target.reportValidity());  \n});\n\npasswordFld.addEventListener('keyup', function (evt) {\n    evt.preventDefault();\n    validationCheck(this,passwordRegEx.test(evt.target.value));  \n});\n\nrepasswordFld.addEventListener('keyup', function (evt) {\n    evt.preventDefault();\n    validationCheck(this, passwordFld.value === evt.target.value);  \n});\n\nfullnameFld.addEventListener('keyup', function (evt) {\n    evt.preventDefault();\n    evt.target.value = evt.target.value.trimLeft();\n    validationCheck(this, evt.target.reportValidity());\n})\n\n\n\n//step 1 \nformEl.addEventListener('submit', function (evt) {\n    evt.preventDefault();  //removes all browser functionalities\n    /*console.log(evt.target.elements['email'].value);*/ //targets each elements for example email\n    \n    //conversion of all data to object so it can be sent properly and even it is converted to array..\n    const getFormValues = [...evt.target.elements].filter((el) => el.type !== 'submit' && el ).map((el) => { //filter submit button becoz we dont need it \n        return {                         //map is use to get all the values here using the 'name attributcheckbox is checked with the help of el.checked property\n            name: el.getAttribute('name'),\n            type: el.type,\n            value: el.type === 'checkbox' ? el.checked : el.value,\n\n        };\n    });\n    //step 2:\n   //now to chk the form is filled fully , need to chk the input boxes...\"chkbox is optional here so eliminate it...\"\n   // filter method excluding chkox and every mthod for cheaking if values are not empty...\n   const isFilled = getFormValues\n   .filter((el)=> el.type !== 'checkbox')\n   .every((el)=> el.value !== '');\n\n     //to chk if isFilled is true and canSumbit is true , invoke a function name submitForm \n     isFilled && canSubmit && submitForm(getFormValues);\n});"]}